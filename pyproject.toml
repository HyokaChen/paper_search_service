[tool.poetry]
name = "paper-search-service"
version = "0.1.0"
description = "search papers's meta information with doi/pmid/arxiv"
authors = ["emptychan <chen19941018@live.com>"]
license = "MIT"
readme = "README.md"

[[tool.poetry.source]]
name = "aliyun"
url = "https://mirrors.aliyun.com/pypi/simple"
priority = "primary"

[tool.poetry.dependencies]
python = "^3.12"
django-ninja = "^1.2.2"
django = "^5.0.7"
aiohttp = "^3.9.5"
easydict = "^1.13"
lxml = "^5.2.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.4"
pytest = "^8.3.1"
pytest-asyncio = "^0.23.8"

[tool.ruff]
line-length = 88
indent-width = 4

# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F", "I001", "PT", "C4"]
ignore = ["E501", "F401"]
respect-gitignore = true

per-file-ignores = {}

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.11.
target-version = "py312"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
